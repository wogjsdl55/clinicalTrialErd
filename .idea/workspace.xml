<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0f21941c-c7db-4956-a8d3-9ea67ad115cf" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$/clinicalTrialErd">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2PGBgXDFu4C3mkQCgc8DxrVd35R" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/1-23-049/git/clinicalTrialErd&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.projectsettings.compiler.annotationProcessors&quot;,
    &quot;spring.configuration.checksum&quot;: &quot;3025a590b1f3f9c5d49d5318f6ebd821&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="clinical" />
      <recent name="clinical.repository" />
      <recent name="clinical.data" />
      <recent name="clinical.service" />
      <recent name="clinical.controller" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="dti" />
    </option>
  </component>
  <component name="RunManager" selected="Spring Boot.springApplication">
    <configuration name="springApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="clinical.springApplication" />
      <module name="clinicalTrialErd" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="clinical.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tests in 'clinicalTrialErd'" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/clinicalTrialErd" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="clinicalTrialErd [dependencies]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/clinicalTrialErd" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="dependencies" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>false</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="clinicalTrialErd" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/clinicalTrialErd" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list />
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>false</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="springApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="clinicalTrialErd.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="clinical.springApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.clinicalTrialErd [dependencies]" />
        <item itemvalue="Gradle.clinicalTrialErd" />
        <item itemvalue="Gradle.Tests in 'clinicalTrialErd'" />
        <item itemvalue="Application.springApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0f21941c-c7db-4956-a8d3-9ea67ad115cf" name="Changes" comment="" />
      <created>1683073649610</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1683073649610</updated>
      <workItem from="1683073650596" duration="826000" />
      <workItem from="1683074494547" duration="548000" />
      <workItem from="1683075054139" duration="544000" />
      <workItem from="1683075606017" duration="465000" />
      <workItem from="1683076079908" duration="156563000" />
      <workItem from="1684722204984" duration="77050000" />
      <workItem from="1685080511576" duration="29921000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="org.springframework.security.web.servletapi.HttpServlet3RequestFactory" memberName="authenticationDetailsSource" />
        <PinnedItemInfo parentTag="org.springframework.security.web.firewall.StrictHttpFirewall" memberName="encodedUrlBlocklist" />
        <PinnedItemInfo parentTag="org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest" memberName="response" />
        <PinnedItemInfo parentTag="org.apache.catalina.core.ApplicationFilterChain" memberName="filters" />
      </pinned-members>
    </pin-to-top-manager>
    <watches-manager>
      <configuration name="SpringBootApplicationConfigurationType">
        <watch expression="this" />
        <watch expression="responset" />
        <watch expression="((HeaderWriterResponse)((HeaderWriterRequest)((Servlet3SecurityContextHolderAwareRequestWrapper)request).request).response).response" custom="org.springframework.security.web.servletapi.HttpServlet3RequestFactory.Servlet3SecurityContextHolderAwareRequestWrapper,org.springframework.security.web.header.HeaderWriterFilter.HeaderWriterResponse,org.springframework.security.web.header.HeaderWriterFilter.HeaderWriterRequest" />
        <watch expression="((HeapCharBuffer)((B2CConverter)((Request)((RequestFacade)((StrictFirewalledRequest)((HeaderWriterRequest)((Servlet3SecurityContextHolderAwareRequestWrapper)request).request).request).request).request).URIConverter).cb).address" custom="org.apache.catalina.connector.RequestFacade,org.apache.catalina.connector.Request,java.nio.HeapCharBuffer,org.springframework.security.web.servletapi.HttpServlet3RequestFactory.Servlet3SecurityContextHolderAwareRequestWrapper,org.springframework.security.web.firewall.StrictHttpFirewall.StrictFirewalledRequest,org.springframework.security.web.header.HeaderWriterFilter.HeaderWriterRequest,org.apache.tomcat.util.buf.B2CConverter" />
      </configuration>
    </watches-manager>
  </component>
</project>